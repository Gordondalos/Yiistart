<?php

namespace app\controllers;

use app\models\Category;
use app\models\TestForm;
use Yii;

class PostController extends AppController {

    public $layout = 'basic'; // установка шаблона для конролера целиком


    // метод выполняется до экшена
    public function beforeAction($action) {
        // отключим проверку токена если пришел на индекс
        if ($action->id == 'show') {
            $this->enableCsrfValidation = false;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex() {

        if (Yii::$app->request->isAjax) {
            $data = Yii::$app->request->post();
        }

        $model = new TestForm();

        if ($model->load( Yii::$app->request->post())) {
            if ($model->validate()) {
                Yii::$app->session->setFlash('success', 'Все проканало');
                return $this->refresh(); // Обновление страницы скидывает даныне
            } else {
                Yii::$app->session->setFlash('error', 'Что то пошло нетак');
            }
        }

        $names = ['Ivanov', 'Petrov', 'Сидоров'];
        return $this->render('index', compact('model', 'names'));
    }

    public function actionShow() {
        //$this->layout = 'basic'; // установка шаблона для конкретной страницы

        // селект * из категорий
       // $cats = Category::find()->all();

        // сортировака по убыванию
       // $cats = Category::find()->orderBy(['id' => SORT_DESC])->all();

        // достаем в формате массива
       // $cats = Category::find()->asArray()->all();

        // WHERE
       // $cats = Category::find()->where(['parent' => 1])->asArray()->all();
       // $cats = Category::find()->where('parent=1')->asArray()->all();

        // LIKE где тайтл лайкает ко
       // $cats = Category::find()->where(['like', 'title', 'ко'])->asArray()->all();

        // где больше равно 2
       // $cats = Category::find()->where(['<=', 'id', 2])->asArray()->all();


       // $count = Category::find()->where('parent>0')->asArray()->count();

        // так тоже можно но массив одномерный  и получает одну запись
       // $cats = Category::find()->where('parent>0')->asArray()->one();
        // дай мне там гду родитель больше нуля лимитом 1
       // $cats = Category::find()->where('parent>0')->asArray()->limit(1)->all();

        // тут массив получить не получится
        //$cats = Category::findOne(['parent' => 1]);
        //$cats = Category::findAll(['parent' => 1]);

        // Запрос - но так неправильно и можно получить инекцию
      //  $query = "Select * from category where title like '%ко%'";
       // $cats = Category::findBySql($query)->asArray()->all();

        // чтобы избежать инекции то можно подстваить параметры
       // $query = "Select * from category where title like :search";
       // $cats = Category::findBySql($query, ['search'=> '%ко%'])->asArray()->all();




        // это отложенная загрузка она схлдит в цикле 100 раз за всеми продуктами, лучше импользовать жадную чтобы отдало за раз
       // $cats = Category::findOne(2);

        // вот так можно сделать жадную загрузку при помощи with
        $cats = Category::find()->with('products')->asArray()->all();

        return $this->render('show', compact('cats', 'count'));
    }

}